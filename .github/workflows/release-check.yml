name: Jupyter Server Release Check
on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
jobs:
  build:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu]
        python-version: ['3.9']
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Install Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: 'x64'
    - name: Upgrade packaging dependencies
      run: |
        pip install --upgrade pip setuptools wheel --user
    - name: Get pip cache dir
      id: pip-cache
      run: |
        echo "::set-output name=dir::$(pip cache dir)"
    - name: Cache pip
      uses: actions/cache@v1
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    - name: Prep Git
      env:
        BRANCH: "master"
      run: |
        # Use email address for the GitHub Actions bot
        # https://github.community/t/github-actions-bot-email-address/17204/6
        # TODO: this should be another Python script we can call with args
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Action"
        git remote add upstream https://github.com/jupyter-server/jupyter_server
        git fetch upstream ${BRANCH} --tags
    - name: Run the changelog prep      
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: "master"
        VERSION: "100.5.1"
      run: |
        export TARGET="jupyter-server/jupyter_server"
        export CHANGELOG="CHANGELOG.md"
        export REMOTE="upstream"
        export VERSION_COMMAND="tbump --non-interactive --only-patch"
        bash scripts/changelog_prep.sh
    - name: Run the release prep      
      env:
        GITHUB_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        BRANCH: "master"
        VERSION: "100.5.1"
        POST_VERSION: "100.6.0.dev0"
      run: |
        export TARGET="jupyter-server/jupyter_server"
        export CHANGELOG="CHANGELOG.md"
        export CHANGELOG_OUTPUT="changelog_entry.md"
        export VERSION_COMMAND="tbump --non-interactive --only-patch"
        # TODO: when we call Python just pass in the full branch and split
        export REMOTE="upstream"  
        bash scripts/release_prep.sh